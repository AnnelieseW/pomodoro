{"ast":null,"code":"var _jsxFileName = \"/Users/anniewen/Documents/Dev/pomodoro/src/Timer.js\";\n\nconst React = require('react');\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.startTimer = () => {\n      this.setState({\n        timerOn: true,\n        timerTime: this.state.timerTime,\n        timerStart: this.state.timerTime\n      });\n      this.timer = setInterval(() => {\n        const newTime = this.state.timerTime - 10;\n\n        if (newTime >= 0) {\n          this.setState({\n            timerTime: newTime\n          });\n        } else {\n          clearInterval(this.timer);\n          this.setState({\n            timerOn: false\n          });\n          alert(\"Break Time\");\n        }\n      });\n    };\n\n    this.stopTimer = () => {\n      clearInterval(this.timer);\n      this.setState({\n        timerOn: false\n      });\n    };\n\n    this.resetTimer = () => {\n      if (this.state.timerOn === false) {\n        this.setState({\n          timerTime: this.state.timerStart\n        });\n      }\n    };\n\n    this.adjustTimer = input => {\n      const _this$state = this.state,\n            timerTime = _this$state.timerTime,\n            timerOn = _this$state.timerOn;\n      const max = 216000000;\n\n      if (!timerOn) {\n        if (input === \"incHours\" && timerTime + 3600000 < max) {\n          this.setState({\n            timerTime: timerTime + 3600000\n          });\n        } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 3600000\n          });\n        } else if (input === \"incMinutes\" && timerTime + 60000 < max) {\n          this.setState({\n            timerTime: timerTime + 60000\n          });\n        } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 60000\n          });\n        } else if (input === \"incSeconds\" && timerTime + 1000 < max) {\n          this.setState({\n            timerTime: timerTime + 1000\n          });\n        } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 1000\n          });\n        }\n      }\n    };\n\n    this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Countdown-timer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Countdown-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Countdown\"));\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/anniewen/Documents/Dev/pomodoro/src/Timer.js"],"names":["React","require","Timer","Component","constructor","props","startTimer","setState","timerOn","timerTime","state","timerStart","timer","setInterval","newTime","clearInterval","alert","stopTimer","resetTimer","adjustTimer","input","max","render"],"mappings":"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","sourcesContent":["const React = require('react');\n\nclass Timer extends React.Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            timerOn: false,\n            timerStart: 0,\n            timerTime: 0\n        };\n    }\n    startTimer = () => {\n        this.setState({\n            timerOn: true,\n            timerTime: this.state.timerTime,\n            timerStart: this.state.timerTime\n        });\n        this.timer = setInterval(() => {\n            const newTime = this.state.timerTime - 10;\n            if (newTime >= 0) {\n                this.setState({\n                    timerTime: newTime\n                });\n            } else {\n                clearInterval(this.timer);\n                this.setState({timerOn: false});\n                alert(\"Break Time\");\n            }\n        })\n    };\n    stopTimer = () => {\n        clearInterval(this.timer);\n        this.setState({ timerOn: false });\n    };\n    resetTimer = () => {\n        if (this.state.timerOn === false) {\n            this.setState({\n                timerTime: this.state.timerStart\n            });\n        }\n    };\n    adjustTimer = input => {\n        const { timerTime, timerOn } = this.state;\n        const max = 216000000;\n        if (!timerOn) {\n            if (input === \"incHours\" && timerTime + 3600000 < max) {\n                this.setState({ timerTime: timerTime + 3600000 });\n            } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\n                this.setState({ timerTime: timerTime - 3600000 });\n            } else if (input === \"incMinutes\" && timerTime + 60000 < max) {\n                this.setState({ timerTime: timerTime + 60000 });\n            } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\n                this.setState({ timerTime: timerTime - 60000 });\n            } else if (input === \"incSeconds\" && timerTime + 1000 < max) {\n                this.setState({ timerTime: timerTime + 1000 });\n            } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\n                this.setState({ timerTime: timerTime - 1000 });\n            }\n        }\n    };\n    render() {\n        return (\n            <div className=\"Countdown-timer\">\n                <div className=\"Countdown-header\">Countdown</div>\n            </div>\n        );\n    }\n}\nexport default Timer;"]},"metadata":{},"sourceType":"module"}