{"ast":null,"code":"var _jsxFileName = \"/Users/anniewen/Documents/Dev/pomodoro/src/Timer.js\";\nimport \"./index.css\";\n\nconst React = require('react');\n\nconst SvgTomato = props => React.createElement(\"svg\", Object.assign({\n  width: 2224,\n  height: 1668,\n  clipRule: \"evenodd\",\n  fillRule: \"evenodd\",\n  strokeLinejoin: \"round\",\n  strokeMiterlimit: 2\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}), React.createElement(\"ellipse\", {\n  cx: 1247.67,\n  cy: 821.26,\n  rx: 550.33,\n  ry: 350.74,\n  fill: \"#E54E4E\",\n  transform: \"matrix(1.6537 0 0 2.11438 -951.275 -848.501)\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}), React.createElement(\"path\", {\n  d: \"M394.877 578.786c.096-.407-.438-.668-.813-.585-161.957 32.938-160.733 301.991-122.922 465.52 52.035 225.097 316.408 452.778 520.484 527.117 101.129 36.849 284.869 79.418 384.743 47.498 25.432-8.122 57.588-50.82 57.116-79.387-.485-28.556-33.461-35.971-59.144-43.113-126.689-33.875-315.474-89.425-396.701-136.488-184.888-107.152-282.67-194.528-369.565-372.017-52.592-107.416-40.81-289.143-13.198-408.545z\",\n  fillOpacity: 0.05,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}), React.createElement(\"path\", {\n  d: \"M1916.742 843.385c5.22 9.642 15.959 14.91 26.756 13.12 10.798-1.789 19.284-10.22 21.105-21.02 12.518-74.577-17.54-175.905-69.053-257.295-94.401-149.157-257.807-264.448-415.97-324.245-89.585-33.844-182.096-42.352-241.333-7.661a25.61 25.61 0 00-12.57 25.406c1.281 10.222 8.578 18.685 18.506 21.475 59.017 16.235 131.692 31.51 179.351 59.793 194.795 115.554 380.279 284.69 493.208 490.427z\",\n  fillOpacity: 0.13,\n  fill: \"#fff\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}), React.createElement(\"g\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(\"path\", {\n  d: \"M1103.393 38.428l65.21 204.277h211.023l-170.715 126.242 65.21 204.266-170.728-126.242-170.715 126.242 65.21-204.266-170.715-126.242h211.01l65.21-204.277z\",\n  fillOpacity: 0.99,\n  fill: \"#256109\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}), React.createElement(\"path\", {\n  d: \"M1253.778 173.121l-66.46 138.501 97.52 102.13-138.607-16.529-66.483 138.502L1060.563 387l-138.607-16.53 126.756-75.378-19.185-148.724 97.519 102.13 126.732-75.378z\",\n  fillOpacity: 0.99,\n  fill: \"#257609\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n})));\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.startTimer = () => {\n      this.setState({\n        timerOn: true,\n        timerTime: this.state.timerTime,\n        timerStart: this.state.timerTime\n      });\n      this.timer = setInterval(() => {\n        const newTime = this.state.timerTime - 1000;\n\n        if (newTime >= 0) {\n          this.setState({\n            timerTime: newTime\n          });\n        } else {\n          clearInterval(this.timer);\n          this.setState({\n            timerOn: false\n          });\n          alert(\"Break Time\");\n        }\n      }, 1000);\n    };\n\n    this.stopTimer = () => {\n      clearInterval(this.timer);\n      this.setState({\n        timerOn: false\n      });\n    };\n\n    this.resetTimer = () => {\n      if (this.state.timerOn === false) {\n        this.setState({\n          timerTime: this.state.timerStart\n        });\n      }\n    };\n\n    this.adjustTimer = input => {\n      const _this$state = this.state,\n            timerTime = _this$state.timerTime,\n            timerOn = _this$state.timerOn;\n      const max = 216000000;\n\n      if (!timerOn) {\n        if (input === \"incHours\" && timerTime + 3600000 < max) {\n          this.setState({\n            timerTime: timerTime + 3600000\n          });\n        } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 3600000\n          });\n        } else if (input === \"incMinutes\" && timerTime + 60000 < max) {\n          this.setState({\n            timerTime: timerTime + 60000\n          });\n        } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 60000\n          });\n        } else if (input === \"incSeconds\" && timerTime + 1000 < max) {\n          this.setState({\n            timerTime: timerTime + 1000\n          });\n        } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 1000\n          });\n        }\n      }\n    };\n\n    this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 1500000\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          timerTime = _this$state2.timerTime,\n          timerStart = _this$state2.timerStart,\n          timerOn = _this$state2.timerOn;\n    let seconds = (\"0\" + Math.floor(timerTime / 1000 % 60) % 60).slice(-2);\n    let minutes = (\"0\" + Math.floor(timerTime / 60000 % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000 % 60)).slice(-2);\n    return React.createElement(\"div\", {\n      className: \"Countdown-timer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Countdown-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Countdown\"), React.createElement(\"div\", {\n      className: \"Countdown-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \" Minutes : Seconds\"), React.createElement(\"div\", {\n      className: \"Countdown-time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, minutes, \" : \", seconds), React.createElement(SvgTomato, {\n      style: {\n        width: '1vw',\n        height: '1vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Countdown-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"incMinutes\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"\\u21E7\"), React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"decMinutes\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"\\u21E9\"), React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"incSeconds\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"\\u21E7\"), React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"decSeconds\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"\\u21E9\")), timerOn === false && (timerStart === 0 || timerTime === timerStart) && React.createElement(\"button\", {\n      className: \"Button-start\",\n      onClick: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Start\"), timerOn === true && timerTime >= 1000 && React.createElement(\"button\", {\n      className: \"Button-stop\",\n      onClick: this.stopTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Stop\"), timerOn === false && timerStart !== 0 && timerStart !== timerTime && timerTime !== 0 && React.createElement(\"button\", {\n      className: \"Button-start\",\n      onClick: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Resume\"), (timerOn === false || timerTime < 1000) && timerStart !== timerTime && timerStart > 0 && React.createElement(\"button\", {\n      className: \"Button-reset\",\n      onClick: this.resetTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Reset\"));\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/anniewen/Documents/Dev/pomodoro/src/Timer.js"],"names":["React","require","SvgTomato","props","Timer","Component","constructor","startTimer","setState","timerOn","timerTime","state","timerStart","timer","setInterval","newTime","clearInterval","alert","stopTimer","resetTimer","adjustTimer","input","max","render","seconds","Math","floor","slice","minutes","hours","width","height"],"mappings":"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","sourcesContent":["import \"./index.css\";\nconst React = require('react');\n\nconst SvgTomato = props => (\n    <svg\n        width={2224}\n        height={1668}\n        clipRule=\"evenodd\"\n        fillRule=\"evenodd\"\n        strokeLinejoin=\"round\"\n        strokeMiterlimit={2}\n        {...props}\n    >\n        <ellipse\n            cx={1247.67}\n            cy={821.26}\n            rx={550.33}\n            ry={350.74}\n            fill=\"#E54E4E\"\n            transform=\"matrix(1.6537 0 0 2.11438 -951.275 -848.501)\"\n        />\n        <path\n            d=\"M394.877 578.786c.096-.407-.438-.668-.813-.585-161.957 32.938-160.733 301.991-122.922 465.52 52.035 225.097 316.408 452.778 520.484 527.117 101.129 36.849 284.869 79.418 384.743 47.498 25.432-8.122 57.588-50.82 57.116-79.387-.485-28.556-33.461-35.971-59.144-43.113-126.689-33.875-315.474-89.425-396.701-136.488-184.888-107.152-282.67-194.528-369.565-372.017-52.592-107.416-40.81-289.143-13.198-408.545z\"\n            fillOpacity={0.05}\n        />\n        <path\n            d=\"M1916.742 843.385c5.22 9.642 15.959 14.91 26.756 13.12 10.798-1.789 19.284-10.22 21.105-21.02 12.518-74.577-17.54-175.905-69.053-257.295-94.401-149.157-257.807-264.448-415.97-324.245-89.585-33.844-182.096-42.352-241.333-7.661a25.61 25.61 0 00-12.57 25.406c1.281 10.222 8.578 18.685 18.506 21.475 59.017 16.235 131.692 31.51 179.351 59.793 194.795 115.554 380.279 284.69 493.208 490.427z\"\n            fillOpacity={0.13}\n            fill=\"#fff\"\n        />\n        <g>\n            <path\n                d=\"M1103.393 38.428l65.21 204.277h211.023l-170.715 126.242 65.21 204.266-170.728-126.242-170.715 126.242 65.21-204.266-170.715-126.242h211.01l65.21-204.277z\"\n                fillOpacity={0.99}\n                fill=\"#256109\"\n            />\n            <path\n                d=\"M1253.778 173.121l-66.46 138.501 97.52 102.13-138.607-16.529-66.483 138.502L1060.563 387l-138.607-16.53 126.756-75.378-19.185-148.724 97.519 102.13 126.732-75.378z\"\n                fillOpacity={0.99}\n                fill=\"#257609\"\n            />\n        </g>\n    </svg>\n);\n\nclass Timer extends React.Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            timerOn: false,\n            timerStart: 0,\n            timerTime: 1500000\n        };\n    }\n    startTimer = () => {\n        this.setState({\n            timerOn: true,\n            timerTime: this.state.timerTime,\n            timerStart: this.state.timerTime\n        });\n        this.timer = setInterval(() => {\n            const newTime = this.state.timerTime - 1000;\n            if (newTime >= 0) {\n                this.setState({\n                    timerTime: newTime\n                });\n            } else {\n                clearInterval(this.timer);\n                this.setState({timerOn: false});\n                alert(\"Break Time\");\n            }\n        },1000)\n    };\n    stopTimer = () => {\n        clearInterval(this.timer);\n        this.setState({ timerOn: false });\n    };\n    resetTimer = () => {\n        if (this.state.timerOn === false) {\n            this.setState({\n                timerTime: this.state.timerStart\n            });\n        }\n    };\n    adjustTimer = input => {\n        const { timerTime, timerOn } = this.state;\n        const max = 216000000;\n        if (!timerOn) {\n            if (input === \"incHours\" && timerTime + 3600000 < max) {\n                this.setState({ timerTime: timerTime + 3600000 });\n            } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\n                this.setState({ timerTime: timerTime - 3600000 });\n            } else if (input === \"incMinutes\" && timerTime + 60000 < max) {\n                this.setState({ timerTime: timerTime + 60000 });\n            } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\n                this.setState({ timerTime: timerTime - 60000 });\n            } else if (input === \"incSeconds\" && timerTime + 1000 < max) {\n                this.setState({ timerTime: timerTime + 1000 });\n            } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\n                this.setState({ timerTime: timerTime - 1000 });\n            }\n        }\n    };\n\n    render() {\n        const { timerTime, timerStart, timerOn } = this.state;\n        let seconds = (\"0\" + (Math.floor((timerTime / 1000) % 60) % 60)).slice(-2);\n        let minutes = (\"0\" + Math.floor((timerTime / 60000) % 60)).slice(-2);\n        let hours = (\"0\" + Math.floor((timerTime / 3600000) % 60)).slice(-2);\n        return (\n            <div className=\"Countdown-timer\">\n                <div className=\"Countdown-header\">Countdown</div>\n                <div className=\"Countdown-label\"> Minutes : Seconds</div>\n                <div className=\"Countdown-time\">\n                     {minutes} : {seconds}\n                </div>\n                <SvgTomato  style={{width:'1vw', height:'1vh'}}/>\n                <div className=\"Countdown-display\">\n                    {/*<button onClick={() => this.adjustTimer(\"incHours\")}>&#8679;</button>*/}\n                    {/*<button onClick={() => this.adjustTimer(\"decHours\")}>&#8681;</button>*/}\n                    <button onClick={() => this.adjustTimer(\"incMinutes\")}>&#8679;</button>\n                    <button onClick={() => this.adjustTimer(\"decMinutes\")}>&#8681;</button>\n                    <button onClick={() => this.adjustTimer(\"incSeconds\")}>&#8679;</button>\n                    <button onClick={() => this.adjustTimer(\"decSeconds\")}>&#8681;</button>\n                </div>\n                {timerOn === false && (timerStart === 0 || timerTime === timerStart) && (\n                    <button className=\"Button-start\" onClick={this.startTimer}>\n                        Start\n                    </button>\n                )}\n                {timerOn === true && timerTime >= 1000 && (\n                    <button className=\"Button-stop\" onClick={this.stopTimer}>\n                        Stop\n                    </button>\n                )}\n                {timerOn === false &&\n                (timerStart !== 0 && timerStart !== timerTime && timerTime !== 0) && (\n                    <button className=\"Button-start\" onClick={this.startTimer}>\n                        Resume\n                    </button>\n                )}\n\n                {(timerOn === false || timerTime < 1000) &&\n                (timerStart !== timerTime && timerStart > 0) && (\n                    <button className=\"Button-reset\" onClick={this.resetTimer}>\n                        Reset\n                    </button>\n                )}\n            </div>\n        );\n    }\n}\nexport default Timer;"]},"metadata":{},"sourceType":"module"}