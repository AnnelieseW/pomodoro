{"ast":null,"code":"var _jsxFileName = \"/Users/anniewen/Documents/Dev/pomodoro/src/Timer.js\";\nimport \"./index.css\";\nimport Tomato from \"./assets/tomato.svg\";\n\nconst React = require('react');\n\nconst SvgPlay = () => React.createElement(\"svg\", {\n  width: \"75\",\n  height: \"75\",\n  viewBox: \"0 0 75 75\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M37.5 6.25C20.25 6.25 6.25 20.25 6.25 37.5C6.25 54.75 20.25 68.75 37.5 68.75C54.75 68.75 68.75 54.75 68.75 37.5C68.75 20.25 54.75 6.25 37.5 6.25ZM31.25 51.5625L50 37.5L31.25 23.4375V51.5625ZM12.5 37.5C12.5 51.2812 23.7188 62.5 37.5 62.5C51.2812 62.5 62.5 51.2812 62.5 37.5C62.5 23.7188 51.2812 12.5 37.5 12.5C23.7188 12.5 12.5 23.7188 12.5 37.5Z\",\n  fill: \"#FFF9F9\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}));\n\nconst SvgPause = () => React.createElement(\"svg\", {\n  width: \"75\",\n  height: \"75\",\n  viewBox: \"0 0 75 75\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M6.25 37.5C6.25 20.25 20.25 6.25 37.5 6.25C54.75 6.25 68.75 20.25 68.75 37.5C68.75 54.75 54.75 68.75 37.5 68.75C20.25 68.75 6.25 54.75 6.25 37.5ZM34.375 50H28.125V25H34.375V50ZM37.5 62.5C23.7188 62.5 12.5 51.2812 12.5 37.5C12.5 23.7188 23.7188 12.5 37.5 12.5C51.2812 12.5 62.5 23.7188 62.5 37.5C62.5 51.2812 51.2812 62.5 37.5 62.5ZM46.875 50H40.625V25H46.875V50Z\",\n  fill: \"white\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}));\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.startTimer = () => {\n      this.setState({\n        timerOn: true\n      });\n      this.timer = setInterval(() => {\n        const newTime = this.state.timerTime - 1000;\n\n        if (newTime >= 0) {\n          this.setState({\n            timerTime: newTime\n          });\n        } else {\n          clearInterval(this.timer);\n          this.setState({\n            timerOn: false\n          });\n          alert(\"Break Time\");\n        }\n      }, 1000);\n    };\n\n    this.stopTimer = () => {\n      clearInterval(this.timer);\n      this.setState({\n        timerOn: false\n      });\n    };\n\n    this.resetTimer = () => {\n      if (this.state.timerOn === false) {\n        this.setState({\n          timerTime: this.state.timerStart\n        });\n      }\n    };\n\n    this.adjustTimer = input => {\n      const _this$state = this.state,\n            timerTime = _this$state.timerTime,\n            timerOn = _this$state.timerOn,\n            timerInitial = _this$state.timerInitial;\n      const max = 216000000;\n\n      if (!timerOn) {\n        if (input === \"incHours\" && timerTime + 3600000 < max) {\n          this.setState({\n            timerInitial: timerInitial + 3600000\n          });\n        } else if (input === \"decHours\" && timerInitial - 3600000 >= 0) {\n          this.setState({\n            timerInitial: timerInitial - 3600000\n          });\n        } else if (input === \"incMinutes\" && timerInitial + 60000 < max) {\n          this.setState({\n            timerInitial: timerInitial + 60000,\n            timerTime: this.state.timerInitial + 60000,\n            timerStart: this.state.timerInitial + 60000\n          });\n        } else if (input === \"decMinutes\" && timerInitial - 60000 >= 0) {\n          this.setState({\n            timerInitial: timerInitial - 60000,\n            timerTime: this.state.timerInitial - 60000,\n            timerStart: this.state.timerInitial - 60000\n          });\n        } else if (input === \"incSeconds\" && timerInitial + 1000 < max) {\n          this.setState({\n            timerInitial: timerInitial + 1000\n          });\n        } else if (input === \"decSeconds\" && timerInitial - 1000 >= 0) {\n          this.setState({\n            timerInitial: timerInitial - 1000\n          });\n        }\n      }\n    };\n\n    this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 1500000,\n      timerInitial: 1500000,\n      timerShortRestInitial: 500000\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          timerTime = _this$state2.timerTime,\n          timerStart = _this$state2.timerStart,\n          timerOn = _this$state2.timerOn,\n          timerInitial = _this$state2.timerInitial,\n          timerShortRestInitial = _this$state2.timerShortRestInitial;\n    let seconds = (\"0\" + Math.floor(timerTime / 1000 % 60) % 60).slice(-2);\n    let minutes = (\"0\" + Math.floor(timerTime / 60000 % 60)).slice(-2);\n    let studyLength = (\"0\" + Math.floor(timerInitial / 60000 % 60)).slice(-2);\n    let shortRestLength = (\"0\" + Math.floor(timerShortRestInitial / 60000 % 60)).slice(-2);\n    return React.createElement(\"div\", {\n      className: \"Countdown-timer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"tomato-img\",\n      src: Tomato,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Countdown-time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, minutes, \" : \", seconds), timerOn === false && (timerStart === 0 || timerTime === timerStart) && React.createElement(\"button\", {\n      className: \"Button-start\",\n      onClick: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(SvgPlay, {\n      className: \"SvgPlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), timerOn === true && timerTime >= 1000 && React.createElement(\"button\", {\n      className: \"Button-stop\",\n      onClick: this.stopTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(SvgPause, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), timerOn === false && timerStart !== 0 && timerStart !== timerTime && timerTime !== 0 && React.createElement(\"button\", {\n      className: \"Button-start\",\n      onClick: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(SvgPlay, {\n      className: \"SvgPlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"adjustTime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \" Focus Length: \"), React.createElement(\"div\", {\n      className: \"adjustTimeContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"incMinutes\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"\\u21E7\"), React.createElement(\"div\", {\n      className: \"setTime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, studyLength, \" \"), React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"decMinutes\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"\\u21E9\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \" mins \")), React.createElement(\"div\", {\n      className: \"adjustTime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Short Break Length: \"), React.createElement(\"div\", {\n      className: \"adjustTimeContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"incMinutes\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"\\u21E7\"), React.createElement(\"div\", {\n      className: \"setTime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, studyLength, \" \"), React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"decMinutes\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"\\u21E9\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \" mins \")), React.createElement(\"div\", {\n      className: \"adjustTime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Long Break Length: \"), React.createElement(\"div\", {\n      className: \"adjustTimeContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"incMinutes\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"\\u21E7\"), React.createElement(\"div\", {\n      className: \"setTime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, studyLength, \" \"), React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"decMinutes\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"\\u21E9\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \" mins \")));\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/anniewen/Documents/Dev/pomodoro/src/Timer.js"],"names":["React","require","SvgPlay","SvgPause","Timer","Component","constructor","props","startTimer","setState","timerOn","timer","setInterval","newTime","state","timerTime","clearInterval","alert","stopTimer","resetTimer","timerStart","adjustTimer","input","timerInitial","max","timerShortRestInitial","render","seconds","Math","floor","slice","minutes","studyLength","shortRestLength","Tomato"],"mappings":"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","sourcesContent":["import \"./index.css\";\nimport Tomato from \"./assets/tomato.svg\";\nconst React = require('react');\n\nconst SvgPlay = () => (\n    <svg width=\"75\" height=\"75\" viewBox=\"0 0 75 75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M37.5 6.25C20.25 6.25 6.25 20.25 6.25 37.5C6.25 54.75 20.25 68.75 37.5 68.75C54.75 68.75 68.75 54.75 68.75 37.5C68.75 20.25 54.75 6.25 37.5 6.25ZM31.25 51.5625L50 37.5L31.25 23.4375V51.5625ZM12.5 37.5C12.5 51.2812 23.7188 62.5 37.5 62.5C51.2812 62.5 62.5 51.2812 62.5 37.5C62.5 23.7188 51.2812 12.5 37.5 12.5C23.7188 12.5 12.5 23.7188 12.5 37.5Z\" fill=\"#FFF9F9\"/>\n    </svg>\n\n);\nconst SvgPause = () => (\n    <svg width=\"75\" height=\"75\" viewBox=\"0 0 75 75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.25 37.5C6.25 20.25 20.25 6.25 37.5 6.25C54.75 6.25 68.75 20.25 68.75 37.5C68.75 54.75 54.75 68.75 37.5 68.75C20.25 68.75 6.25 54.75 6.25 37.5ZM34.375 50H28.125V25H34.375V50ZM37.5 62.5C23.7188 62.5 12.5 51.2812 12.5 37.5C12.5 23.7188 23.7188 12.5 37.5 12.5C51.2812 12.5 62.5 23.7188 62.5 37.5C62.5 51.2812 51.2812 62.5 37.5 62.5ZM46.875 50H40.625V25H46.875V50Z\" fill=\"white\"/>\n    </svg>\n\n);\n\nclass Timer extends React.Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            timerOn: false,\n            timerStart: 0,\n            timerTime: 1500000,\n            timerInitial: 1500000,\n            timerShortRestInitial:500000,\n        };\n    }\n    startTimer = () => {\n        this.setState({\n            timerOn: true\n        });\n        this.timer = setInterval(() => {\n            const newTime = this.state.timerTime- 1000;\n            if (newTime >= 0) {\n                this.setState({\n                    timerTime: newTime\n                });\n            } else {\n                clearInterval(this.timer);\n                this.setState({timerOn: false});\n                alert(\"Break Time\");\n            }\n        },1000)\n    };\n    stopTimer = () => {\n        clearInterval(this.timer);\n        this.setState({ timerOn: false });\n    };\n    resetTimer = () => {\n        if (this.state.timerOn === false) {\n            this.setState({\n                timerTime: this.state.timerStart\n            });\n        }\n    };\n    adjustTimer = input => {\n        const { timerTime, timerOn, timerInitial } = this.state;\n        const max = 216000000;\n        if (!timerOn) {\n            if (input === \"incHours\" && timerTime + 3600000 < max) {\n                this.setState({ timerInitial: timerInitial + 3600000 });\n            } else if (input === \"decHours\" && timerInitial - 3600000 >= 0) {\n                this.setState({ timerInitial: timerInitial - 3600000 });\n            } else if (input === \"incMinutes\" && timerInitial + 60000 < max) {\n                this.setState(\n                    {\n                        timerInitial: timerInitial + 60000,\n                        timerTime: this.state.timerInitial + 60000,\n                        timerStart: this.state.timerInitial + 60000\n                    });\n            } else if (input === \"decMinutes\" && timerInitial - 60000 >= 0) {\n                this.setState({\n                    timerInitial: timerInitial - 60000,\n                    timerTime: this.state.timerInitial - 60000,\n                    timerStart: this.state.timerInitial - 60000\n                });\n            } else if (input === \"incSeconds\" && timerInitial + 1000 < max) {\n                this.setState({ timerInitial: timerInitial + 1000 });\n            } else if (input === \"decSeconds\" && timerInitial - 1000 >= 0) {\n                this.setState({ timerInitial: timerInitial - 1000 });\n            }\n        }\n    };\n\n    render() {\n        const { timerTime, timerStart, timerOn, timerInitial, timerShortRestInitial } = this.state;\n        let seconds = (\"0\" + (Math.floor((timerTime/ 1000) % 60) % 60)).slice(-2);\n        let minutes = (\"0\" + Math.floor((timerTime/ 60000) % 60)).slice(-2);\n        let studyLength = (\"0\" + Math.floor((timerInitial/ 60000) % 60)).slice(-2);\n        let shortRestLength = (\"0\" + Math.floor((timerShortRestInitial/ 60000) % 60)).slice(-2 )\n        return (\n            <div className=\"Countdown-timer\">\n                <div className=\"container\">\n                    <img className=\"tomato-img\" src={Tomato}/>\n                    <div className=\"Countdown-time\">\n                        {minutes} : {seconds}\n                    </div>\n                    {timerOn === false && (timerStart === 0 || timerTime === timerStart) && (\n                        <button className=\"Button-start\" onClick={this.startTimer}>\n                            <SvgPlay className=\"SvgPlay\"/>\n                        </button>\n                    )}\n                    {timerOn === true && timerTime >= 1000 && (\n                        <button className=\"Button-stop\" onClick={this.stopTimer}>\n                            <SvgPause/>\n                        </button>\n                    )}\n                    {timerOn === false &&\n                    (timerStart !== 0 && timerStart !== timerTime && timerTime !== 0) && (\n                        <button className=\"Button-start\" onClick={this.startTimer}>\n                            <SvgPlay className=\"SvgPlay\"/>\n                        </button>\n                    )}\n                </div>\n                <div className=\"adjustTime\">\n                    <p> Focus Length: </p>\n                    <div className=\"adjustTimeContainer\">\n                        <button onClick={() => this.adjustTimer(\"incMinutes\")}>&#8679;</button>\n                        <div className=\"setTime\">{studyLength} </div>\n                        <button onClick={() => this.adjustTimer(\"decMinutes\")}>&#8681;</button>\n                    </div>\n                    <p> mins </p>\n                </div>\n                <div className=\"adjustTime\">\n                    <p>Short Break Length: </p>\n                    <div className=\"adjustTimeContainer\">\n                        <button onClick={() => this.adjustTimer(\"incMinutes\")}>&#8679;</button>\n                        <div className=\"setTime\">{studyLength} </div>\n                        <button onClick={() => this.adjustTimer(\"decMinutes\")}>&#8681;</button>\n                    </div>\n                    <p> mins </p>\n                </div>\n                <div className=\"adjustTime\">\n                    <p>Long Break Length: </p>\n                    <div className=\"adjustTimeContainer\">\n                        <button onClick={() => this.adjustTimer(\"incMinutes\")}>&#8679;</button>\n                        <div className=\"setTime\">{studyLength} </div>\n                        <button onClick={() => this.adjustTimer(\"decMinutes\")}>&#8681;</button>\n                    </div>\n                    <p> mins </p>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Timer;"]},"metadata":{},"sourceType":"module"}