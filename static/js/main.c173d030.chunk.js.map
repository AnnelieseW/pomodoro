{"version":3,"sources":["Timer.js","index.js","assets/tomato.svg"],"names":["React","require","SvgPlay","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","SvgPause","Timer","props","startTimer","setState","timerOn","timer","setInterval","newTime","state","timerTime","clearInterval","alert","stopTimer","resetTimer","timerStart","adjustTimer","input","timerInitial","timerShortRestInitial","this","seconds","Math","floor","slice","minutes","studyLength","shortRestLength","className","src","Tomato","onClick","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c173d030.chunk.js","sourcesContent":["import \"./index.css\";\nimport Tomato from \"./assets/tomato.svg\";\nconst React = require('react');\n\nconst SvgPlay = () => (\n    <svg width=\"75\" height=\"75\" viewBox=\"0 0 75 75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M37.5 6.25C20.25 6.25 6.25 20.25 6.25 37.5C6.25 54.75 20.25 68.75 37.5 68.75C54.75 68.75 68.75 54.75 68.75 37.5C68.75 20.25 54.75 6.25 37.5 6.25ZM31.25 51.5625L50 37.5L31.25 23.4375V51.5625ZM12.5 37.5C12.5 51.2812 23.7188 62.5 37.5 62.5C51.2812 62.5 62.5 51.2812 62.5 37.5C62.5 23.7188 51.2812 12.5 37.5 12.5C23.7188 12.5 12.5 23.7188 12.5 37.5Z\" fill=\"#FFF9F9\"/>\n    </svg>\n\n);\nconst SvgPause = () => (\n    <svg width=\"75\" height=\"75\" viewBox=\"0 0 75 75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.25 37.5C6.25 20.25 20.25 6.25 37.5 6.25C54.75 6.25 68.75 20.25 68.75 37.5C68.75 54.75 54.75 68.75 37.5 68.75C20.25 68.75 6.25 54.75 6.25 37.5ZM34.375 50H28.125V25H34.375V50ZM37.5 62.5C23.7188 62.5 12.5 51.2812 12.5 37.5C12.5 23.7188 23.7188 12.5 37.5 12.5C51.2812 12.5 62.5 23.7188 62.5 37.5C62.5 51.2812 51.2812 62.5 37.5 62.5ZM46.875 50H40.625V25H46.875V50Z\" fill=\"white\"/>\n    </svg>\n\n);\n\nclass Timer extends React.Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            timerOn: false,\n            timerStart: 0,\n            timerTime: 1500000,\n            timerInitial: 1500000,\n            timerShortRestInitial:500000,\n        };\n    }\n    startTimer = () => {\n        this.setState({\n            timerOn: true\n        });\n        this.timer = setInterval(() => {\n            const newTime = this.state.timerTime- 1000;\n            if (newTime >= 0) {\n                this.setState({\n                    timerTime: newTime\n                });\n            } else {\n                clearInterval(this.timer);\n                this.setState({timerOn: false});\n                alert(\"Break Time\");\n            }\n        },1000)\n    };\n    stopTimer = () => {\n        clearInterval(this.timer);\n        this.setState({ timerOn: false });\n    };\n    resetTimer = () => {\n        if (this.state.timerOn === false) {\n            this.setState({\n                timerTime: this.state.timerStart\n            });\n        }\n    };\n    adjustTimer = input => {\n        const { timerTime, timerOn, timerInitial } = this.state;\n        const max = 216000000;\n        if (!timerOn) {\n            if (input === \"incHours\" && timerTime + 3600000 < max) {\n                this.setState({ timerInitial: timerInitial + 3600000 });\n            } else if (input === \"decHours\" && timerInitial - 3600000 >= 0) {\n                this.setState({ timerInitial: timerInitial - 3600000 });\n            } else if (input === \"incMinutes\" && timerInitial + 60000 < max) {\n                this.setState(\n                    {\n                        timerInitial: timerInitial + 60000,\n                        timerTime: this.state.timerInitial + 60000,\n                        timerStart: this.state.timerInitial + 60000\n                    });\n            } else if (input === \"decMinutes\" && timerInitial - 60000 >= 0) {\n                this.setState({\n                    timerInitial: timerInitial - 60000,\n                    timerTime: this.state.timerInitial - 60000,\n                    timerStart: this.state.timerInitial - 60000\n                });\n            } else if (input === \"incSeconds\" && timerInitial + 1000 < max) {\n                this.setState({ timerInitial: timerInitial + 1000 });\n            } else if (input === \"decSeconds\" && timerInitial - 1000 >= 0) {\n                this.setState({ timerInitial: timerInitial - 1000 });\n            }\n        }\n    };\n\n    render() {\n        const { timerTime, timerStart, timerOn, timerInitial, timerShortRestInitial } = this.state;\n        let seconds = (\"0\" + (Math.floor((timerTime/ 1000) % 60) % 60)).slice(-2);\n        let minutes = (\"0\" + Math.floor((timerTime/ 60000) % 60)).slice(-2);\n        let studyLength = (\"0\" + Math.floor((timerInitial/ 60000) % 60)).slice(-2);\n        let shortRestLength = (\"0\" + Math.floor((timerShortRestInitial/ 60000) % 60)).slice(-2 )\n        return (\n            <div className=\"Countdown-timer\">\n                <div className=\"container\">\n                    <img className=\"tomato-img\" src={Tomato}/>\n                    <div className=\"Countdown-time\">\n                        {minutes} : {seconds}\n                    </div>\n                    {timerOn === false && (timerStart === 0 || timerTime === timerStart) && (\n                        <button className=\"Button-start\" onClick={this.startTimer}>\n                            <SvgPlay className=\"SvgPlay\"/>\n                        </button>\n                    )}\n                    {timerOn === true && timerTime >= 1000 && (\n                        <button className=\"Button-stop\" onClick={this.stopTimer}>\n                            <SvgPause/>\n                        </button>\n                    )}\n                    {timerOn === false &&\n                    (timerStart !== 0 && timerStart !== timerTime && timerTime !== 0) && (\n                        <button className=\"Button-start\" onClick={this.startTimer}>\n                            <SvgPlay className=\"SvgPlay\"/>\n                        </button>\n                    )}\n                </div>\n                <div className=\"adjustTime\">\n                    <p> Focus Length: </p>\n                    <div className=\"adjustTimeContainer\">\n                        <button onClick={() => this.adjustTimer(\"incMinutes\")}>&#8679;</button>\n                        <div className=\"setTime\">{studyLength} </div>\n                        <button onClick={() => this.adjustTimer(\"decMinutes\")}>&#8681;</button>\n                    </div>\n                    <p> mins </p>\n                </div>\n                <div className=\"adjustTime\">\n                    <p>Short Break Length: </p>\n                    <div className=\"adjustTimeContainer\">\n                        <button onClick={() => this.adjustTimer(\"incMinutes\")}>&#8679;</button>\n                        <div className=\"setTime\">{shortRestLength} </div>\n                        <button onClick={() => this.adjustTimer(\"decMinutes\")}>&#8681;</button>\n                    </div>\n                    <p> mins </p>\n                </div>\n                <div className=\"adjustTime\">\n                    <p>Long Break Length: </p>\n                    <div className=\"adjustTimeContainer\">\n                        <button onClick={() => this.adjustTimer(\"incMinutes\")}>&#8679;</button>\n                        <div className=\"setTime\">{studyLength} </div>\n                        <button onClick={() => this.adjustTimer(\"decMinutes\")}>&#8681;</button>\n                    </div>\n                    <p> mins </p>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Timer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Timer from './Timer';\n\nReactDOM.render(<Timer />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n","module.exports = __webpack_public_path__ + \"static/media/tomato.43b8d7ed.svg\";"],"sourceRoot":""}